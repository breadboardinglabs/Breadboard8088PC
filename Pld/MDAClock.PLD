Name            MDAClockV1 MDA Video Adaptor Clock;
Partno          MDAClockV1;
Revision        01;
Date            14/01/24;
Designer        Dave Henry;
Company         Breadboarding;
Location        UK;
Assembly        None;
Device          p22v10;

/****************************************************************************/
/* This PLD replaces 3 inverters for HS, VS and DE, 1 XOR for Cursor/Dotout */
/* 1 x 74LS163 Counter 1x3 NAND for clock clear,                            */
/* 2 flip-flops for DE delay and                                            */
/* 4 flip-flops for SRLatch delay                                           */
/* High on InvVS and InvHS will invert the signal for -ve sync,             */
/* low for +ve sync                                                         */
/*                                                                          */
/* 14/01/2024 V1  */
/*                                                                          */
/****************************************************************************/

/* Pin Map 
         --------
  DotClk|1     24| Vcc
  RA0   |2     23| DotClkBuf
  RA1   |3     22| /DotClkInv
  RA2   |4     21| SRLatch
  RA3   |5     20| CHLatch
  /RST  |6     19| Qa
  NC    |7     18| Qb
  NC    |8     17| Qc CharClk
  NC    |9     16| /Qc
  NC    |10    15| ATLatch
  NC    |11    14| UnderlineRA
  Gnd   |12    13| NC 
         --------
*/

/*
 * Inputs:  
 */

Pin 1  =  DotClk;
Pin 2  =  RA0;
Pin 3  =  RA1;
Pin 4  =  RA2;
Pin 5  =  RA3;
Pin 6  =  !RST;
/*
 * Outputs:  define outputs - all are simple combinatorial
 */
Pin 23 = DotClkBuf;     /* Video bit stream for foreground/background */
Pin 22 = DotClkInv;         /* Cursor delayed by 1 dot clock */
Pin 21 = SRLatch;         /* Cursor delayed by 2 dot clocks */
Pin 20 = CHLatch;      /* Character Latch after 2 dot clock cycles */
Pin 19 = Qa;           /* Counter output /2 */
Pin 18 = Qb;           /* Counter outut /4 */
Pin 17 = Qc;           /* Counter output /8 */
Pin 16 = QcInv;      /* Original /CLR delayed by 4 dot clock cycles */
Pin 15 = ATLatch;        /* Horizontal Sync, inverted if InvHS is true */
Pin 14 = UnderlineRA;        /* Vertical Sync, inverted if InvVS is true */

/*
 * Logic symbols
 * ! NOT  # OR   & AND  $ XOR   .d D Flip-flop Input
 */

CLK=DotClk;

DotClkBuf = DotClk;
DotClkInv = !DotClk;

/* Underline on line 14 */
UnderlineRA = RA3 & RA2 & RA1 & !RA0;

/* These conditions are required to cascade D Flip-Flops */
/* as a Counter !Q feeds back into D */
Qc.d = ((!Qc & Qb & Qa) # (Qc & !(Qb & Qa))) ;
Qb.d = (!Qb & Qa # Qb & !Qa);
/* D Flip Flop Counter feeds !Q into D and uses CLK to cycle */
Qa.d = !Qa;

Qa.ar = RST;
Qb.ar = RST;
Qc.ar = RST;

/* Character Latch now original SR Latch #3- 4 FF so don't need Colour pipeline */
/* CHLatch=!(!Qa & Qb & !Qc); old 3 cycles */
CHLatch=Qc # (!(Qa & Qb));

/* This is the condition we worked out in the Excel Sheet now at #5 - 6 FF */
SRLatch= !(Qa & !Qb & Qc);

/* This is the condition we worked out in the Excel Sheet now at #5 - 6 FF */
ATLatch= !(Qa & !Qb & Qc);
